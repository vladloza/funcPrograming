(defun deriv (f x)
  (cond ((numberp f) 0)
        ((eq f x) 1)
        ((eq (car f) '+) `(+ ,(deriv (cadr f) x) ,(deriv (caddr f) x)))
        ((eq (car f) '-) `(- ,(deriv (cadr f) x) ,(deriv (caddr f) x)))
        ((eq (car f) '*) `(+ (* ,(caddr f) ,(deriv (cadr f) x)) (* ,(cadr f) ,(deriv (caddr f) x))))
        ((eq (car f) 'sin) `(* (cos ,(cadr f)) ,(deriv (cadr f) x)))
        ((eq (car f) 'cos) `(* (- (cos ,(cadr f)) ,(deriv (cadr f) x))))
		((eq (car f) 'tg) `(* (/ 1 (^ (cos ,(cadr f)) 2)) ,(deriv (cadr f) x)))
		((eq (car f) 'ctg) `(* (-(/ 1 (^ (sin ,(cadr f)) 2))) ,(deriv (cadr f) x)))
		((eq (car f) 'ln) `(* (/ 1 ,(cadr f)) ,(deriv (cadr f) x)))
		((eq (car f) 'arcsin) `(* (/ 1 (sqrt (- 1 (^ ,(cadr f) 2)))) ,(deriv (cadr f) x)))
		((eq (car f) 'arccos) `(-(* (/ 1 (sqrt (- 1 (^ ,(cadr f) 2)))) ,(deriv (cadr f) x))))
		((eq (car f) 'sh) `(* (ch ,(cadr f)) ,(deriv (cadr f) x)))
		((eq (car f) 'ch) `(* (sh ,(cadr f)) ,(deriv (cadr f) x)))
		((eq (car f) 'th) `(* (/ 1 (^ (ch ,(cadr f)) 2)) ,(deriv (cadr f) x)))
		((eq (car f) 'cth) `(* (- (/ 1 (^ (sh ,(cadr f)) 2))) ,(deriv (cadr f) x)))
        ((eq (car f) 'exp) `(* (exp ,(cadr f)) (deriv (cadr f) x)))
        ((eq (car f) '^) `(* (* ,(caddr f) (^ ,(cadr f) (- ,(caddr f) 1))) ,(deriv (cadr f) x)))))

(deriv '(sin (* x 2)) 'x)
(deriv '(cos (* x 2)) 'x)
(deriv '(tg (* x 2)) 'x)
(deriv '(ctg (* x 2)) 'x)
(deriv '(ln (* x 2)) 'x)
(deriv '(arcsin (* x 2)) 'x)
(deriv '(arccos (* x 2)) 'x)
(deriv '(sh (* x 2)) 'x)
(deriv '(ch (* x 2)) 'x)
(deriv '(th (* x 2)) 'x)
(deriv '(cth (* x 2)) 'x)
(deriv '(exp (* x 2)) 'x)
